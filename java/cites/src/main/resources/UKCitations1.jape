Phase: UKCitations1
Input: Token
Options: control = appelt

Rule: UKPGA
Priority: 1
(
	( { Token.kind == "number", Token.length == 4 } ) :year
	( { Token.string == "(" } ) ?
	{ Token.string == "c" }
	( { Token.string == "." } ) ?
	( { Token.kind == "number" } ) :number
	( { Token.string == ")" } ) ?
): cite --> {
	gate.AnnotationSet set = (gate.AnnotationSet) bindings.get("cite");
	int year = Integer.parseInt((String) bindings.get("year").iterator().next().getFeatures().get("string"));
	String number = (String) bindings.get("number").iterator().next().getFeatures().get("string");
	String cls;
	if (year >= 1801)
		cls = "UnitedKingdomPublicGeneralAct";
	else if (year >= 1707)
		cls = "GreatBritainAct";
	else if (year >= 1267)
		cls = "EnglandAct";
	else
		cls = "UnitedKingdomPublicGeneralAct";
	gate.FeatureMap features = Factory.newFeatureMap();
	features.put("Class", cls);
	features.put("Year", year);
	features.put("Number", number);
	outputAS.add(set.firstNode(), set.lastNode(), "Citation", features);
}

Rule: UKLA
Priority: 1
(
	( { Token.kind == "number", Token.length == 4 } ) :year
	( { Token.string == "(" } ) ?
	{ Token.string == "c" }
	{ Token.string == "." }
	( { Token.string ==~ "(c{0,3})(xc|xl|l?x{0,3})(ix|iv|v?i{0,3})" } ) :number
	( { Token.string == ")" } ) ?
): cite --> {
	gate.AnnotationSet cite = (gate.AnnotationSet) bindings.get("cite");
	int year = Integer.parseInt((String) bindings.get("year").iterator().next().getFeatures().get("string"));
	String roman = (String) bindings.get("number").iterator().next().getFeatures().get("string");
	java.util.function.Function<String, Integer> romanToArabic = (java.util.function.Function<String, Integer>) this.ctx.getController().getFeatures().get("romanToArabic");
	Integer number = romanToArabic.apply(roman);
	String cls;
	if (year >= 1801)
		cls = "UnitedKingdomLocalAct";
	else if (year >= 1797)
		cls = "GreatBritainLocalAct";
	else
		cls = "UnitedKingdomLocalAct";
	gate.FeatureMap features = Factory.newFeatureMap();
	features.put("Class", cls);
	features.put("Year", year);
	features.put("Number", number);
	outputAS.add(cite.firstNode(), cite.lastNode(), "Citation", features);
}

Rule: ASP
Priority: 1
(
	( { Token.kind == "number", Token.length == 4 } ) :year
	( { Token.string == "(" } ) ?
	{ Token.string == "asp" }
	( { Token.kind == "number" } ) :number
	( { Token.string == ")" } ) ?
): cite --> :cite.Citation = {
	Class = "ScottishAct",
	Year = :year.Token.string,
	Number = :number.Token.string
}

Rule: ANAW
Priority: 1
(
	( { Token.kind == "number", Token.length == 4 } ) :year
	( { Token.string == "(" } ) ?
	{ Token.string == "anaw" }
	( { Token.kind == "number" } ) :number
	( { Token.string == ")" } ) ?
): cite --> :cite.Citation = {
	Class = "WelshNationalAssemblyAct",
	Year = :year.Token.string,
	Number = :number.Token.string
}
Rule: ASC
Priority: 1
(
	( { Token.kind == "number", Token.length == 4 } ) :year
	{ Token.string == "(" }
	{ Token.string == "asc" }
	( { Token.kind == "number" } ) :number
	{ Token.string == ")" }
): cite --> :cite.Citation = {
	Class = "WelshParliamentAct",
	Year = :year.Token.string,
	Number = :number.Token.string
}
Rule: NAWM
Priority: 1
(
	( { Token.kind == "number", Token.length == 4 } ) :year
	( { Token.string == "(" } ) ?
	{ Token.string == "nawm" }
	( { Token.kind == "number" } ) :number
	( { Token.string == ")" } ) ?
): cite --> :cite.Citation = {
	Class = "WelshAssemblyMeasure",
	Year = :year.Token.string,
	Number = :number.Token.string
}

Rule: NIA1
Priority: 2
(
	{ Token.string == "(" }
	{ Token.string == "Northern" }
	{ Token.string == "Ireland" }
	{ Token.string == ")" }
	(
		( { Token.kind == "number", Token.length == 4 } ) :year
		( { Token.string == "(" } ) ?
		{ Token.string == "c" }
		{ Token.string == "." }
		( { Token.kind == "number" } ) :number
		(	{ Token.string == "N" }
			{ Token.string == "." }
			{ Token.string == "I" }
			{ Token.string == "." } ) ?
		( { Token.string == ")" } ) ?
	): cite
) --> {
	gate.AnnotationSet cite = (gate.AnnotationSet) bindings.get("cite");
	int year = Integer.parseInt((String) bindings.get("year").iterator().next().getFeatures().get("string"));
	String number = (String) bindings.get("number").iterator().next().getFeatures().get("string");
	String type = year <= 1972 ? "NorthernIrelandParliamentAct" : "NorthernIrelandAct";
	gate.FeatureMap features = Factory.newFeatureMap();
	features.put("Class", type);
	features.put("Year", year);
	features.put("Number", number);
	outputAS.add(cite.firstNode(), cite.lastNode(), "Citation", features);
}

Rule: NIA2
Priority: 2
(
	(
		( { Token.kind == "number", Token.length == 4 } ) :year
		( { Token.string == "(" } ) ? // sometimes there are two sets of parentheses: uksi/2023/186
		{ Token.string == "c" }
		{ Token.string == "." }
		( { Token.kind == "number" } ) :number
		( { Token.string == "." } ) ? // error in nisr/2002/131
		( { Token.string == "(" } ) ?
		{ Token.string == "N" }
		{ Token.string == "." }
		{ Token.string == "I" }
		( { Token.string == "." } ) ?
		( { Token.string == ")" } ) ?
		( { Token.string == ")" } ) ?
	): cite
) --> {
	gate.AnnotationSet cite = (gate.AnnotationSet) bindings.get("cite");
	int year = Integer.parseInt((String) bindings.get("year").iterator().next().getFeatures().get("string"));
	String number = (String) bindings.get("number").iterator().next().getFeatures().get("string");
	String type = year <= 1972 ? "NorthernIrelandParliamentAct" : "NorthernIrelandAct";
	gate.FeatureMap features = Factory.newFeatureMap();
	features.put("Class", type);
	features.put("Year", year);
	features.put("Number", number);
	outputAS.add(cite.firstNode(), cite.lastNode(), "Citation", features);
}

Rule: NIA3
Priority: 2
(
	{ Token.string == "(" }
	{ Token.string == "N" }
	{ Token.string == "." }
	{ Token.string == "I" }
	{ Token.string == "." }
	{ Token.string == ")" }
	(
		( { Token.kind == "number", Token.length == 4 } ) :year
		( { Token.string == "(" } ) ?
		{ Token.string == "c" }
		{ Token.string == "." }
		( { Token.kind == "number" } ) :number
		( { Token.string == ")" } ) ?
	): cite
) --> {
	gate.AnnotationSet cite = (gate.AnnotationSet) bindings.get("cite");
	int year = Integer.parseInt((String) bindings.get("year").iterator().next().getFeatures().get("string"));
	String number = (String) bindings.get("number").iterator().next().getFeatures().get("string");
	String type = year <= 1972 ? "NorthernIrelandParliamentAct" : "NorthernIrelandAct";
	gate.FeatureMap features = Factory.newFeatureMap();
	features.put("Class", type);
	features.put("Year", year);
	features.put("Number", number);
	outputAS.add(cite.firstNode(), cite.lastNode(), "Citation", features);
}

Rule: UKCM
Priority: 2
(
	{ Token.string == "Measure" }
	( { Token.kind == "number", Token.length == 4 } ) :year
	{ Token.string == "(" }
	{ Token.string == "No" }
	{ Token.string == "." }
	( { Token.kind == "number" } ) :number
	{ Token.string == ")" }
): cite --> :cite.Citation = {
	Class = "UnitedKingdomChurchMeasure",
	Year = :year.Token.string,
	Number = :number.Token.string
}


// secondary

Rule: UKSI
Priority: 3
(
	{ Token.string == "S" }
	{ Token.string == "." }
	{ Token.string == "I" }
	( { Token.string == "." } ) ?
	( { Token.kind == "number", Token.length == 4 } ) :year
	{ Token.string == "/" }
	( { Token.kind == "number" } ) :number
): cite --> :cite.Citation = {
	Class = "UnitedKingdomStatutoryInstrument",
	Year = :year.Token.string,
	Number = :number.Token.string
}

Rule: UKSI2
Priority: 3
(
	{ Token.string == "SI" }
	( { Token.string == "." } ) ?
	( { Token.kind == "number", Token.length == 4 } ) :year
	{ Token.string == "/" }
	( { Token.kind == "number" } ) :number
): cite --> :cite.Citation = {
	Class = "UnitedKingdomStatutoryInstrument",
	Year = :year.Token.string,
	Number = :number.Token.string
}

Rule: UKSI3
Priority: 4
(
	{ Token.string == "S" }
	{ Token.string == "." }
	{ Token.string == "I" }
	{ Token.string == "." }
	( { Token.kind == "number", Token.length == 4 } ) :year
	{ Token.string == "/" }
	( { Token.kind == "number" } ) :number
	{ Token.string == "(" }
	( { Token.string == "C" } ) :series
	{ Token.string == "." }
	( { Token.kind == "number" } ) :number2
	{ Token.string == ")" }
): cite --> {
	gate.AnnotationSet cite = (gate.AnnotationSet) bindings.get("cite");
	String year = (String) bindings.get("year").iterator().next().getFeatures().get("string");
	String number = (String) bindings.get("number").iterator().next().getFeatures().get("string");
	String series = (String) bindings.get("series").iterator().next().getFeatures().get("string");
	String number2 = (String) bindings.get("number2").iterator().next().getFeatures().get("string");
	String altNumber = series + " " + number2;
	gate.FeatureMap features = Factory.newFeatureMap();
	features.put("Class", "UnitedKingdomStatutoryInstrument");
	features.put("Year", year);
	features.put("Number", number);
	features.put("AlternativeNumber", altNumber);
	outputAS.add(cite.firstNode(), cite.lastNode(), "Citation", features);
}

Rule: UKSISuccessive1
Priority: 1
(
	( { Token.kind == "number", Token.length == 4 } ) :year
	{ Token.string == "/" }
	( { Token.kind == "number" } ) :number
): cite --> {
	gate.AnnotationSet cite = (gate.AnnotationSet) bindings.get("cite");
	String year = (String) bindings.get("year").iterator().next().getFeatures().get("string");
	String number = (String) bindings.get("number").iterator().next().getFeatures().get("string");
	gate.FeatureMap features = Factory.newFeatureMap();
	features.put("Class", "Unknown");
	features.put("Year", year);
	features.put("Number", number);
	inputAS.add(cite.firstNode(), cite.lastNode(), "SuccessiveCitation", features);
}

Rule: UKSISuccessive2
Priority: 2
(
	( { Token.kind == "number", Token.length == 4 } ) :year
	{ Token.string == "/" }
	( { Token.kind == "number" } ) :number
	{ Token.string == "(" }
	( { Token.string == "C" } ) :series
	{ Token.string == "." }
	( { Token.kind == "number" } ) :number2
	{ Token.string == ")" }
): cite --> {
	gate.AnnotationSet cite = (gate.AnnotationSet) bindings.get("cite");
	String year = (String) bindings.get("year").iterator().next().getFeatures().get("string");
	String number = (String) bindings.get("number").iterator().next().getFeatures().get("string");
	String series = (String) bindings.get("series").iterator().next().getFeatures().get("string");
	String number2 = (String) bindings.get("number2").iterator().next().getFeatures().get("string");
	String altNumber = series + " " + number2;
	gate.FeatureMap features = Factory.newFeatureMap();
	features.put("Class", "Unknown");
	features.put("Year", year);
	features.put("Number", number);
	features.put("AlternativeNumber", altNumber);
	inputAS.add(cite.firstNode(), cite.lastNode(), "SuccessiveCitation", features);
}

Rule: SSI
Priority: 5
(
	{ Token.string == "S" }
	{ Token.string == "." }
	{ Token.string == "S" }
	{ Token.string == "." }
	{ Token.string == "I" }
	( { Token.string == "." } ) ?
	( { Token.kind == "number", Token.length == 4 } ) :year
	{ Token.string == "/" }
	( { Token.kind == "number" } ) :number
): cite --> :cite.Citation = {
	Class = "ScottishStatutoryInstrument",
	Year = :year.Token.string,
	Number = :number.Token.string
}

Rule: WSI
Priority: 5
(
	{ Token.string == "S" }
	{ Token.string == "." }
	{ Token.string == "I" }
	{ Token.string == "." }
	( { Token.string == "(" } ) ?
	( { Token.kind == "number", Token.length == 4 } ) :year
	{ Token.string == "/" }
	( { Token.kind == "number" } ) :number
	( { Token.string == ")" } ) ?
	{ Token.string == "(" }
	{ Token.string == "W" }
	{ Token.string == "." }
	( { Token.kind == "number" } ) :number2
	{ Token.string == ")" }
): cite --> {
	gate.AnnotationSet cite = (gate.AnnotationSet) bindings.get("cite");
	String year = (String) bindings.get("year").iterator().next().getFeatures().get("string");
	String number = (String) bindings.get("number").iterator().next().getFeatures().get("string");
	String number2 = (String) bindings.get("number2").iterator().next().getFeatures().get("string");
	String altNumber = "W. " + number2;
	gate.FeatureMap features = Factory.newFeatureMap();
	features.put("Class", "WelshStatutoryInstrument");
	features.put("Year", year);
	features.put("Number", number);
	features.put("AlternativeNumber", altNumber);
	outputAS.add(cite.firstNode(), cite.lastNode(), "Citation", features);
}

Rule: WSI1
Priority: 5
(
	{ Token.string == "SI" }
	( { Token.string == "." } ) ?
	( { Token.kind == "number", Token.length == 4 } ) :year
	{ Token.string == "/" }
	( { Token.kind == "number" } ) :number
	{ Token.string == "(" }
	( { Token.string == "W" } ) :series
	{ Token.string == "." }
	( { Token.kind == "number" } ) :number2
	{ Token.string == ")" }
): cite --> {
	gate.AnnotationSet cite = (gate.AnnotationSet) bindings.get("cite");
	String year = (String) bindings.get("year").iterator().next().getFeatures().get("string");
	String number = (String) bindings.get("number").iterator().next().getFeatures().get("string");
	String number2 = (String) bindings.get("number2").iterator().next().getFeatures().get("string");
	String altNumber = "W. " + number2;
	gate.FeatureMap features = Factory.newFeatureMap();
	features.put("Class", "WelshStatutoryInstrument");
	features.put("Year", year);
	features.put("Number", number);
	features.put("AlternativeNumber", altNumber);
	outputAS.add(cite.firstNode(), cite.lastNode(), "Citation", features);
}

Rule: WSISuccessive1
Priority: 2
(
	( { Token.kind == "number", Token.length == 4 } ) :year
	{ Token.string == "/" }
	( { Token.kind == "number" } ) :number
	{ Token.string == "(" }
	( { Token.string == "W" } ) :series
	{ Token.string == "." }
	( { Token.kind == "number" } ) :number2
	{ Token.string == ")" }
): cite --> {
	gate.AnnotationSet cite = (gate.AnnotationSet) bindings.get("cite");
	String year = (String) bindings.get("year").iterator().next().getFeatures().get("string");
	String number = (String) bindings.get("number").iterator().next().getFeatures().get("string");
	String number2 = (String) bindings.get("number2").iterator().next().getFeatures().get("string");
	String altNumber = "W. " + number2;
	gate.FeatureMap features = Factory.newFeatureMap();
	features.put("Class", "WelshStatutoryInstrument");
	features.put("Year", year);
	features.put("Number", number);
	features.put("AlternativeNumber", altNumber);
//	outputAS.add(cite.firstNode(), cite.lastNode(), "Citation", features);
	inputAS.add(cite.firstNode(), cite.lastNode(), "SuccessiveCitation", features);
}


Rule: NISI
Priority: 5
(
	{ Token.string == "S" }
	{ Token.string == "." }
	{ Token.string == "I" }
	{ Token.string == "." }
	( { Token.kind == "number", Token.length == 4 } ) :year
	( { Token.string == "/" } |
	  ( { Token.string ==~ "Nos?" } { Token.string == "." } ) )
	( { Token.kind == "number" } ) :number
	{ Token.string == "(" }
	{ Token.string == "N" }
	{ Token.string == "." }
	{ Token.string == "I" }
	{ Token.string == "." }
	( { Token.kind == "number" } ) :number2
	{ Token.string == ")" }
): cite --> :cite.Citation = {
	Class = "NorthernIrelandOrderInCouncil",
	Year = :year.Token.string,
	Number = :number.Token.string,
	NorthernIrishNumber = :number2.Token.string
}

Rule: NISR
Priority: 5
(
	{ Token.string == "S" }
	{ Token.string == "." }
	{ Token.string == "R" }
	{ Token.string == "." }
	( { Token.kind == "number", Token.length == 4 } ) :year
	( { Token.string == "/" } |
	  ( { Token.string ==~ "[Nn]os?" } ( { Token.string == "." } ) ? ) )
	( { Token.kind == "number" } ) :number
): cite --> :cite.Citation = {
	Class = "NorthernIrelandStatutoryRule",
	Year = :year.Token.string,
	Number = :number.Token.string
}
Rule: NISR2
Priority: 5
(
	{ Token.string == "S" }
	{ Token.string == "." }
	{ Token.string == "R" }
	{ Token.string == "." }
	{ Token.string == "(" }
	( ( { Token.string == "N" } { Token.string == "." } { Token.string == "I" } { Token.string == "." } ) |
		{ Token.string == "NI" } )
	{ Token.string == ")" }
	( { Token.kind == "number", Token.length == 4 } ) :year
	( { Token.string == "/" } |
	  ( { Token.string ==~ "Nos?" } { Token.string == "." } ) )
	( { Token.kind == "number" } ) :number
): cite --> :cite.Citation = {
	Class = "NorthernIrelandStatutoryRule",
	Year = :year.Token.string,
	Number = :number.Token.string
}
Rule: NISRO
Priority: 5
(
	{ Token.string == "S" }
	{ Token.string == "." }
	{ Token.string == "R" }
	{ Token.string == "." }
	{ Token.string == "&" }
	{ Token.string == "O" }
	{ Token.string == "." }
	{ Token.string == "(" }
	{ Token.string == "N" }
	{ Token.string == "." }
	{ Token.string == "I" }
	{ Token.string == "." }
	{ Token.string == ")" }
	( { Token.kind == "number", Token.length == 4 } ) :year
	( { Token.string == "/" } |
	  ( { Token.string ==~ "Nos?" } { Token.string == "." } ) )
	( { Token.kind == "number" } ) :number
): cite --> :cite.Citation = {
	Class = "NorthernIrelandStatutoryRuleOrOrder",
	Year = :year.Token.string,
	Number = :number.Token.string
}

Rule: NISX
Priority: 4
(
	( { Token.kind == "number", Token.length == 4 } ) :year
	( { Token.string == "," } ) ?
	( { Token.string ==~ "Nos?" } { Token.string == "." } )
	( { Token.kind == "number" } ) :number
	{ Token.string == "(" }
	{ Token.string == "N" }
	{ Token.string == "." }
	{ Token.string == "I" }
	{ Token.string == "." }
	( { Token.kind == "number" } ) :number2
	{ Token.string == ")" }
): cite --> {
	gate.AnnotationSet set = (gate.AnnotationSet) bindings.get("cite");
	int year = Integer.parseInt((String) bindings.get("year").iterator().next().getFeatures().get("string"));
	String number = (String) bindings.get("number").iterator().next().getFeatures().get("string");
	String number2 = (String) bindings.get("number2").iterator().next().getFeatures().get("string");
	String altNumber = "N.I. " + number2;
	String type;
//	if (year >= 1972)
//		type = "NorthernIrelandOrderInCouncil";
//	else
		type = "NorthernIrelandOrderInCouncil";
	gate.FeatureMap features = Factory.newFeatureMap();
	features.put("Class", type);
	features.put("Year", year);
	features.put("Number", number);
	features.put("AlternativeNumber", altNumber);
	outputAS.add(set.firstNode(), set.lastNode(), "Citation", features);
}
