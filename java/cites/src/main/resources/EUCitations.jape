Phase: EUCitations
Input: Token
Options: control = appelt

Rule: EUCitation
Priority: 1
(
	( { Token.string == "Commission" } | { Token.string == "Council" } ) ?
	( { Token.string == "Implementing" } | { Token.string == "Delegated" } ) ?
	( { Token.string ==~ "Regulations?" } | { Token.string ==~ "Decisions?" } | { Token.string ==~ "Directives?" } ) :type
	( { Token.string == "(" }
	  ( { Token.string == "EU" } | { Token.string == "EC" } | { Token.string == "EEC" } )
	  { Token.string == ")" } ) ?
	( { Token.string == "No" }
	  ( { Token.string == "." } ) ? ) ?
	( { Token.kind == "number" } ) :number
	{ Token.string == "/" }
	( { Token.kind == "number" } ) :year
	( { Token.string == "/" }
	  ( { Token.string == "EU" } | { Token.string == "EC" } | { Token.string == "EEC" } ) ) ?
): cite --> {

	gate.AnnotationSet cite = (gate.AnnotationSet) bindings.get("cite");

	String tpe = (String) bindings.get("type").iterator().next().getFeatures().get("string");
	String year = (String) bindings.get("year").iterator().next().getFeatures().get("string");
	String number = (String) bindings.get("number").iterator().next().getFeatures().get("string");

	tpe = "EuropeanUnion" + tpe;
	if (tpe.endsWith("s"))
		tpe = tpe.substring(0, tpe.length() - 1);

	gate.FeatureMap features = Factory.newFeatureMap();
	features.put("Class", tpe);
	features.put("Year", year);
	features.put("Number", number);
	outputAS.add(cite.firstNode(), cite.lastNode(), "Citation", features);
}

Rule: SuccessiveCitation
Priority: 1
(
	( { Token.string == "," } | { Token.string == "and" } | { Token.string == "or" } )
	(
	  ( { Token.string == "(" }
	    ( { Token.string == "EU" } | { Token.string == "EC" } | { Token.string == "EEC" } )
	    { Token.string == ")" } ) ?
	  ( { Token.string == "No" }
	    ( { Token.string == "." } ) ? ) ?
	  ( { Token.kind == "number" } ) :number
	  { Token.string == "/" }
	  ( { Token.kind == "number" } ) :year
	  ( { Token.string == "/" }
	    ( { Token.string == "EU" } | { Token.string == "EC" } | { Token.string == "EEC" } ) ) ?
	): cite
) --> {
	gate.AnnotationSet cite = (gate.AnnotationSet) bindings.get("cite");
	String year = (String) bindings.get("year").iterator().next().getFeatures().get("string");
	String number = (String) bindings.get("number").iterator().next().getFeatures().get("string");
	gate.FeatureMap features = Factory.newFeatureMap();
	features.put("Class", "EUUnknown");
	features.put("Year", year);
	features.put("Number", number);
	inputAS.add(cite.firstNode(), cite.lastNode(), "SuccessiveCitation", features);
}

Rule: OJCitation
Priority: 1
(
	{ Token.string == "O" }
	{ Token.string == "." }
	{ Token.string == "J" }
	{ Token.string == "." }
	{ Token.string == "No" }
	{ Token.string == "." }
	( { Token.string == "L" } | { Token.string == "C" } ) :series
	( { Token.kind == "number" } ) :issue
	{ Token.string == "," }
	( { Token.kind == "number" } ) :day
	{ Token.string == "." }
	( { Token.kind == "number" } ) :month
	{ Token.string == "." }
	( { Token.kind == "number" } ) :year
	( { Token.string == "," } ) ?
	{ Token.string == "p" }
	{ Token.string == "." }
	( { Token.kind == "number" } ) :page
): cite --> :cite.Citation = {
	Class = "OfficialJournal",
	Series = :series.Token.string,
	Issue = :issue.Token.string,
	Year = :year.Token.string,
	Month = :month.Token.string,
	Day = :day.Token.string,
	Page = :page.Token.string
}
