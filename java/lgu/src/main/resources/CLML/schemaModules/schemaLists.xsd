<?xml version="1.0" encoding="UTF-8"?>
<xsd:schema xmlns="http://www.legislation.gov.uk/namespaces/legislation" targetNamespace="http://www.legislation.gov.uk/namespaces/legislation" 
	xmlns:xsd="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" attributeFormDefault="unqualified"  xmlns:h="http://www.w3.org/1999/xhtml"
	version="2.4" id="SchemaChanges">
	
	<xsd:annotation>
		<xsd:appinfo xmlns:dcq="http://purl.org/dc/terms/" xmlns:dc="http://purl.org/dc/elements/1.1/">
			<dc:title>Lists schema</dc:title>
			<dc:description>Defines generic list structures</dc:description>
			<dc:contributor>Paul Appleby, Peter Lazar</dc:contributor>
			<dc:creator>TSO</dc:creator>
			<dc:identifier>SchemaLists</dc:identifier>
			<dc:language>en</dc:language>
			<dc:publisher>The Stationery Office</dc:publisher>
			<dc:rights>Crown copyright 2018</dc:rights>
			<dc:date>
				<dcq:created>2003-10-20</dcq:created>
			</dc:date>
			<dc:date>
				<dcq:modified>2021-05-12</dcq:modified>
			</dc:date>
			<xsd:documentation>
			Modification information
			Version	Name				Modification
			2.4			Karl Rajangam	Annotation added for attribute NumberOverride, and updated OrderedList
			2.0			Colin Mackenzie	Numbering restarted at 2 for new EU and merged schema
			1.2			Paul Appleby	Fixed error where separator attribute was changed to Separator
			1.1			Paul Appleby	Added Class attribute to UnorderedList with the intention that it is used to indicate a list consisting of definitions
			1.0			Paul Appleby	Created
			</xsd:documentation>
		</xsd:appinfo>
	</xsd:annotation>
	
	<xsd:element name="OrderedList">
		<xsd:annotation>
			<xsd:documentation>
				<h:p>An ordered list of items. These are used for numbered sub-provisions where the hierarchy of numbered subprovisions is broken, such as in a definition list - except for in tables, where <h:code>&lt;P<h:i>n</h:i>&gt;</h:code> elements are still used.</h:p>
				<h:p>Ordered lists should not be confused with provisions. Provisions are numbered paragraphs, whereas ordered lists are semantically grouped paragraphs.</h:p>
				<!-- PA 15/5/2023: This no longer appears to be true (e.g. P3s routinely used in ExplanatoryNotes without ancestor P1), so commenting out
					<h:p>The schema takes the approach that if there is a break in the hierarchy of the provisions then any subsequent structure must be a list. This typically occurs where defined terms contain numbered items. These should be done as ordered lists within unordered lists, i.e. the defined term is an entry in an unordered list. Subsequently the chain of numbered provisions is broken and any children must be ordered lists.</h:p>
				-->
				<h:p>The format of the list numbering is defined using the <h:code>Type</h:code> attribute.</h:p>
				<h:p>The text surrounding the number is defined using the <h:code>Decoration</h:code> attribute.</h:p>
				<h:p>A specific starting number can be specified using the <h:code>Start</h:code> attribute.</h:p>
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="ListItem" maxOccurs="unbounded"/>
			</xsd:sequence>
			<xsd:attributeGroup ref="CommonAttributes"/>
			<xsd:attribute name="Type" use="required">
				<xsd:annotation>
					<xsd:documentation>
						<h:p>The numbering format of the list</h:p>
					</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:NMTOKEN">
						<xsd:enumeration value="arabic">
							<xsd:annotation>
								<xsd:documentation>1, 2, 3</xsd:documentation>
							</xsd:annotation>
						</xsd:enumeration>
						<xsd:enumeration value="roman">
							<xsd:annotation>
								<xsd:documentation>i, ii, iii</xsd:documentation>
							</xsd:annotation>
						</xsd:enumeration>
						<xsd:enumeration value="romanUpper">
							<xsd:annotation>
								<xsd:documentation>I, II, III</xsd:documentation>
							</xsd:annotation>
						</xsd:enumeration>
						<xsd:enumeration value="alpha">
							<xsd:annotation>
								<xsd:documentation>a, b, c</xsd:documentation>
							</xsd:annotation>
						</xsd:enumeration>
						<xsd:enumeration value="alphaUpper">
							<xsd:annotation>
								<xsd:documentation>A, B, C</xsd:documentation>
							</xsd:annotation>
						</xsd:enumeration>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
			<xsd:attribute name="Decoration" use="required">
				<xsd:annotation>
					<xsd:documentation>
						<h:p>The text that decorates the numbering defined by the <h:code>Decoration</h:code> attribute</h:p>
					</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:NMTOKEN">
						<xsd:enumeration value="none">
							<xsd:annotation>
								<xsd:documentation>No text surrounding the number e.g. 1, 2, 3</xsd:documentation>
							</xsd:annotation>
						</xsd:enumeration>
						<xsd:enumeration value="parens">
							<xsd:annotation>
								<xsd:documentation>Parentheses surrounding the number e.g. (1), (2), (3)</xsd:documentation>
							</xsd:annotation>
						</xsd:enumeration>
						<xsd:enumeration value="parenRight">
							<xsd:annotation>
								<xsd:documentation>Parenthesis to the right of the number e.g. 1), 2), 3)</xsd:documentation>
							</xsd:annotation>
						</xsd:enumeration>
						<xsd:enumeration value="brackets">
							<xsd:annotation>
								<xsd:documentation>Square brackets surrounding the number e.g. [1], [2], [3]</xsd:documentation>
							</xsd:annotation>
						</xsd:enumeration>
						<xsd:enumeration value="bracketRight">
							<xsd:annotation>
								<xsd:documentation>Square bracket to the right of the number e.g. 1], 2], 3]</xsd:documentation>
							</xsd:annotation>
						</xsd:enumeration>
						<xsd:enumeration value="period">
							<xsd:annotation>
								<xsd:documentation>Period to the right of the number e.g. 1., 2., 3.</xsd:documentation>
							</xsd:annotation>
						</xsd:enumeration>
						<xsd:enumeration value="colon">
							<xsd:annotation>
								<xsd:documentation>Colon to the right of the number e.g. 1:, 2:, 3:</xsd:documentation>
							</xsd:annotation>
						</xsd:enumeration>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
			<xsd:attribute name="Start" type="xsd:positiveInteger">
				<xsd:annotation>
					<xsd:documentation>
						<h:p>The start attribute defines the number (or letter) at which the list numbering should start.</h:p>
						<h:p>For example a value of 3 in an alpha list would start the numbering with a letter “c”.</h:p>
						<h:p>The default value is 1.</h:p>
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>
	
	<xsd:element name="UnorderedList">
		<xsd:annotation>
			<xsd:documentation>
				<h:p>An unordered list of items.</h:p>
				<h:p>Unordered lists provide a mechanism to group together paragraphs that form a semantic list rather than just marking them up as unconnected paragraphs of text.</h:p>
				<h:p>The Decoration attribute defines the type of bullet (if any) that should be used.</h:p>
				<h:p>The Class attribute is used to identify the purpose of an unordered list – this is designed for use with tabbed lists to act as a hint to identify lists of definitions in secondary legislation. The suggested value for this kind of list is ‘Definition’.</h:p>
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="ListItem" maxOccurs="unbounded"/>
			</xsd:sequence>
			<xsd:attribute name="Decoration" use="required">
				<xsd:annotation>
					<xsd:documentation>
						<h:p>Defines the type of bullet (if any) that should be used</h:p>
						<h:ul>
							<h:li>bullet = •</h:li>
							<h:li>dash = —</h:li>
							<h:li>arrow = —></h:li>
							<h:li>none = No decoration</h:li>
						</h:ul>
					</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:NMTOKEN">
						<xsd:enumeration value="bullet"/>
						<xsd:enumeration value="dash"/>
						<xsd:enumeration value="arrow"/>
						<xsd:enumeration value="none"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
			<xsd:attribute name="Class" type="xsd:string">
				<xsd:annotation>
					<xsd:documentation>Used to identify the purpose of an unordered list. The suggested value for this kind of list is ‘Definition’.</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attributeGroup ref="CommonAttributes"/>
		</xsd:complexType>
	</xsd:element>
	
	<xsd:element name="KeyList">
		<xsd:annotation>
			<xsd:documentation>A definition list. It is normally used in the Where element if in a formula.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence maxOccurs="unbounded">
				<xsd:element ref="KeyListItem"/>
			</xsd:sequence>
			<xsd:attributeGroup ref="CommonAttributes"/>
			<xsd:attribute name="Separator" type="xsd:string">
				<xsd:annotation>
					<xsd:documentation>
						<h:p>The Separator attribute can be a text string that contains the text the separates the key item from its definition.</h:p>
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>
	
	<xsd:element name="KeyListItem">
		<xsd:annotation>
			<xsd:documentation>An item within a definition list.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="Key"/>
				<xsd:element ref="ListItem"/>
			</xsd:sequence>
			<xsd:attributeGroup ref="CommonAttributes"/>
		</xsd:complexType>
	</xsd:element>
	
	<xsd:element name="Key" type="InlineFullStructure">
		<xsd:annotation>
			<xsd:documentation>
				<h:p>The key for an item within a definition list.</h:p>
			</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	
	<xsd:element name="ListItem">
		<xsd:annotation>
			<xsd:documentation>
				<h:p>A standard list item</h:p>
				<h:p>The content model is defined as standard paragraph level block elements</h:p>
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:complexContent>
				<xsd:extension base="ParaBasicStructure">
					<xsd:attribute name="NumberOverride" type="xsd:string">
						<xsd:annotation>
							<xsd:documentation>The text value it holds will be used to override the default number values</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
				</xsd:extension>
			</xsd:complexContent>
		</xsd:complexType>
	</xsd:element>
	
</xsd:schema>
