<?xml version="1.0" encoding="UTF-8"?>
<xsd:schema xmlns="http://www.legislation.gov.uk/namespaces/legislation" targetNamespace="http://www.legislation.gov.uk/namespaces/legislation" xmlns:h="http://www.w3.org/1999/xhtml" xmlns:xsd="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" attributeFormDefault="unqualified" version="2.4" id="SchemaResources">

	<xsd:annotation>
		<xsd:appinfo xmlns:dcq="http://purl.org/dc/terms/" xmlns:dc="http://purl.org/dc/elements/1.1/">
			<dc:title>Resources schema</dc:title>
			<dc:description>Defines media resources</dc:description>
			<dc:contributor>Paul Appleby</dc:contributor>
			<dc:creator>TSO</dc:creator>
			<dc:identifier>SchemaResources</dc:identifier>
			<dc:language>en</dc:language>
			<dc:publisher>The Stationery Office</dc:publisher>
			<dc:rights>Crown copyright 2018</dc:rights>
			<dc:date>
				<dcq:created>2003-10-20</dcq:created>
			</dc:date>
			<dc:date>
				<dcq:modified>2021-04-28</dcq:modified>
			</dc:date>
			<xsd:documentation>
			Modification information
			Version		Name				Modification
			2.4			Karl Rajangam		Annotation updated for Resource and InternalVersion
			2.0			Colin Mackenzie		Numbering restarted at 2 for new EU and merged schema
			1.1			Paul Appleby		Added width and height attributes to ExternalVersion and InternalVersion
			1.0			Paul Appleby		Created
			</xsd:documentation>
		</xsd:appinfo>
	</xsd:annotation>

	<xsd:element name="Resources">
		<xsd:annotation>
			<xsd:documentation>
				<h:p>Holds all of the content that is needed by the document but is not part of the main flow of the document or is external to the document, e.g. graphics.</h:p>
				<h:p>Resources may be held internally or externally.</h:p>
				<h:p>If the resource is held internally then it may be held as XML content, e.g. SVG for a graphic. Internal versions are held using the <h:code>&lt;InternalVersion&gt;</h:code> element. It is expected that an application processing the schema should know how to handle the following namespaces:</h:p>
				<h:ul>
					<h:li>SVG</h:li>
					<h:li>XSL:FO</h:li>
					<h:li>XHTML</h:li>
					<h:li>MathML</h:li>
				</h:ul>
				<h:p>The <h:code>id</h:code> attribute is used as a unique identifier for the resource.</h:p>
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:choice maxOccurs="unbounded">
				<xsd:element ref="Resource"/>
				<xsd:element ref="ResourceGroup"/>
			</xsd:choice>
			<xsd:attributeGroup ref="CommonAttributes"/>
		</xsd:complexType>
	</xsd:element>

	<xsd:attributeGroup name="ResourceElementIDAttributes">
		<xsd:attribute name="id" use="required">
			<xsd:annotation>
				<xsd:documentation>A unique identifier in the format r00000</xsd:documentation>
			</xsd:annotation>
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="r[0-9]{5}"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
	</xsd:attributeGroup>

	<xsd:element name="ResourceGroup">
		<xsd:annotation>
			<xsd:documentation>A group of resources referenced by the document</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:choice maxOccurs="unbounded">
				<xsd:element ref="Resource"/>
			</xsd:choice>
			<xsd:attributeGroup ref="CommonSubAttributes"/>
			<xsd:attributeGroup ref="ResourceElementIDAttributes"/>
		</xsd:complexType>
	</xsd:element>

	<xsd:element name="Resource">
		<xsd:annotation>
			<xsd:documentation>A resource referenced within the legislation document. This can either be an external resource or internal data contained within the Resource element. Examples, but not limited to, of such resources are images, xml or binary data. The identifier attribute 'id' is a unique value used to reference the resource from within the data.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:choice maxOccurs="unbounded">
				<xsd:element ref="InternalVersion"/>
				<xsd:element ref="ExternalVersion"/>
			</xsd:choice>
			<xsd:attributeGroup ref="CommonSubAttributes"/>
			<xsd:attributeGroup ref="ResourceElementIDAttributes"/>
		</xsd:complexType>
	</xsd:element>

	<xsd:element name="InternalVersion">
		<xsd:annotation>
			<xsd:documentation>A resource contained within the document, such as an image, binary data or XML</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:choice>
				<xsd:element ref="BinaryContent"/>
				<xsd:element ref="XMLcontent"/>
			</xsd:choice>
			<xsd:attributeGroup ref="CommonSubAttributes"/>
			<xsd:attribute name="id">
				<xsd:annotation>
					<xsd:documentation>A unique identifier in the format i00000</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:ID">
						<xsd:pattern value="i[0-9]{5}"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
			<xsd:attribute name="Height" type="FigureSizeType"/>
			<xsd:attribute name="Width" type="FigureSizeType"/>
		</xsd:complexType>
	</xsd:element>

	<xsd:element name="BinaryContent">
		<xsd:annotation>
			<xsd:documentation>
				<h:p>An internally stored document, encoded in Base64 format â€“ a format that allows raw binary files to be stored.</h:p>
				<h:p>The obvious advantage of holding resources internally is that when transporting a file there are no external files to worry about. A Format attribute can be used to give a hint to a processing application as to the format of the encoded data. The possible values are the same as described for ExternalVersion.</h:p>
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:simpleContent>
				<xsd:extension base="xsd:base64Binary">
					<xsd:attributeGroup ref="CommonAttributes"/>
					<xsd:attribute name="Format" type="FileFormatsType">
						<xsd:annotation>
							<xsd:documentation>The format of the decoded resource</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
				</xsd:extension>
			</xsd:simpleContent>
		</xsd:complexType>
	</xsd:element>

	<xsd:element name="XMLcontent">
		<xsd:annotation>
			<xsd:documentation>
				<h:p>An internally stored document, stored as well-formed XML.</h:p>
				<h:p>Note that this content does not get parsed.</h:p>
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:choice>
				<xsd:any namespace="##other" processContents="skip"/>
				<xsd:any namespace="##targetNamespace" processContents="strict"/>
			</xsd:choice>
			<xsd:attributeGroup ref="CommonAttributes"/>
		</xsd:complexType>
	</xsd:element>

	<xsd:element name="ExternalVersion">
		<xsd:annotation>
			<xsd:documentation>
				<h:p>An externally located resource located by reference.</h:p>
				<h:p>The location of the resource is held in the URI attribute, which should contain a URI.</h:p>
				<h:p>The file format of the resource is held in the Format attribute.</h:p>
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:attribute name="URI" type="xsd:anyURI">
				<xsd:annotation>
					<xsd:documentation>URI of external resource. For DOIs use the format doi:10.1000/182</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="Format" type="FileFormatsType">
				<xsd:annotation>
					<xsd:documentation>
						<h:p>The format of the external resource</h:p>
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attributeGroup ref="CommonSubAttributes"/>
			<xsd:attribute name="id">
				<xsd:annotation>
					<xsd:documentation>A unique identifier in the format e00000</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:ID">
						<xsd:pattern value="e[0-9]{5}"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
			<xsd:attribute name="Height" type="FigureSizeType"/>
			<xsd:attribute name="Width" type="FigureSizeType"/>
		</xsd:complexType>
	</xsd:element>

	<xsd:simpleType name="FileFormatsType">
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="doc">
				<xsd:annotation>
					<xsd:documentation>Word document</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="eps">
				<xsd:annotation>
					<xsd:documentation>EPS graphic</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="gif">
				<xsd:annotation>
					<xsd:documentation>GIF graphic</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="html">
				<xsd:annotation>
					<xsd:documentation>HTML document</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="jpeg">
				<xsd:annotation>
					<xsd:documentation>JPEG graphic</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="mpeg">
				<xsd:annotation>
					<xsd:documentation>MPEG video</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="png">
				<xsd:annotation>
					<xsd:documentation>PNG graphic</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="rtf">
				<xsd:annotation>
					<xsd:documentation>Rich Text Format document</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="svg">
				<xsd:annotation>
					<xsd:documentation>SVG graphic</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="xml">
				<xsd:annotation>
					<xsd:documentation>XML document</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="pdf">
				<xsd:annotation>
					<xsd:documentation>PDF document</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="tiff">
				<xsd:annotation>
					<xsd:documentation>TIFF graphic</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="other">
				<xsd:annotation>
					<xsd:documentation>Unspecified format. Note that an application processing the document may not know how to handle the file</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
		</xsd:restriction>
	</xsd:simpleType>

</xsd:schema>
